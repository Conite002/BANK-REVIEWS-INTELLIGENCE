version: '3.8'

services:
  postgresql:
    image: postgres
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_DB=bank_reviews
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ROOT_PASSWORD=root
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - mynetwork

  app:
    build: .
    environment:
      - DB_USER=postgres  
      - DB_PASSWORD=postgres
      - DB_NAME=bank_reviews
      - DB_PORT=5432
      - DB_HOST=postgres_db 
      - FLASK_APP=superset
    depends_on:
      postgresql:
        condition: service_healthy
      # ollama: 
      #   condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8088:8088"  # Assuming your app runs on port 80 internally, map it to port 8000 externally
      
    entrypoint: ["bash", "/app/entrypoint.sh"]

  # ollama:

  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.ollama
  #   container_name: ollama
  #   pull_policy: always
  #   tty: true
  #   ports:
  #     - "11434:11434"
  #   restart: unless-stopped
  #   volumes:
  #     - ollama:/root/.ollama
  #   entrypoint: ["ollama", "serve"]
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:11434/ || exit 1"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3
networks:
  mynetwork:
  
volumes:
  postgres_data:
  ollama: {}
